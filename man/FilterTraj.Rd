% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilterTraj.r
\name{FilterTraj}
\alias{FilterTraj}
\title{Filter trajectory based on conditions}
\usage{
FilterTraj(traj, type = "attribute", filter = NA)
}
\arguments{
\item{traj}{an object of the class \code{ltraj} which contains the time-stamped movement fixes of the object. Note this object must be a \code{type II ltraj} object. For more information on objects of this type see \code{help(ltraj)}.}

\item{type}{The type of filter to apply (one of 'attribute','spatial','temporal','tod').}

\item{filter}{The filter criteria (see details).}
}
\value{
A \code{ltraj} object with only those fixes satisfying the \code{filter} criteria.
}
\description{
The function \code{FilterTraj} is a function for extracting portions of a trajectory based on some filter criteria.
}
\details{
The function \code{FilterTraj} can be used to extract a portion of a trajectory based on a spatial area (i.e., a \code{SpatialPolygons} object) or based on temporal criteria (such as time-of-day or a temporal window) or based on attributes of the trajectory. In the case of attribute filtering, the criteria can be any of the default attributes of an \code{ltraj} object, or based on additional attributes stored alongside the trajectory. The \code{filter} parameter is a flexible way to define the criteria for filtering. The \code{filter} object can be one of: \cr
- \code{SpatialPolygons*} objects for spatial filtering;\cr
- \code{POSIX} class objects (list of length=2) for filtering based on some temporal window (see examples);\cr
- \code{character} object (list of length=2) for filtering based on time-of-day (see examples);\cr
- \code{character} object containing the attribute filter criteria as a logical expression (see examples and \code{?subset}).\cr
\cr
NOTE: When using \code{FilterTraj} be very careful about using the output \code{ltraj} object in further analysis. When a new \code{ltraj} object is created, all the movement parameters (e.g., dist, dt) are recalculated and thus not necessarily valid. Therefore, subsequent analysis should ideally focus only on the raw fix information (i.e., x, y, date).
}
\examples{
data(deer)
deer37 <- deer[1]
deer38 <- deer[2]

#Spatial Filter 
#----NOT RUN----
\dontrun{
library(adhabitatHR)
oz <- mcp(SpatialPoints(cbind(ld(deer38)$x,ld(deer38)$y)))
x <- FilterTraj(deer37,type='spatial',filter=oz)
}
#
#---------------

#Temporal Filter
t1 <- as.POSIXct(strptime('2005-03-09 00:00:00', format= '\%Y-\%m-\%d \%H:\%M:\%S'))
t2 <- as.POSIXct(strptime('2005-03-11 00:00:00', format= '\%Y-\%m-\%d \%H:\%M:\%S'))
twin <- c(t1,t2)
x <- FilterTraj(deer37,type='temporal',filter=twin)

#tod Filter
tod <- c('06:00:00', '10:00:00')
x <- FilterTraj(deer37,type='tod',filter=tod)

#attribute Filter
q <- 'dist > 100'
x <- FilterTraj(deer37,type='attribute',filter=q)

q <- 'dist > 100 & rel.angle < 1'
x <- FilterTraj(deer37,type='attribute',filter=q)

}
\seealso{
GetTO
}
\keyword{processing}
